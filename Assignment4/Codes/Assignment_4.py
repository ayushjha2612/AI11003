# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1It8nMnr1gVRoVhOxveExQ8-HYHcErXpd
"""

import numpy as np
import matplotlib.pyplot as plt
from scipy.stats import bernoulli
# no of simulations
simlen=int(1e5)
# Probability of rv X =0
prob1=  7/9

# Probability of rv X =1
prob2=  1 -prob1

#Simulations using Bernoulli r.v.
data_bern1 = bernoulli.rvs(size=simlen,p=prob1)
data_bern2 = bernoulli.rvs(size=simlen,p=prob2)

#Calculating the number of favourable outcomes
err_ind1 = np.nonzero(data_bern1 == 1)
err_ind2 = np.nonzero(data_bern2 == 1)

#calculating the simulated probability
sim_prob1 = np.size(err_ind1)/simlen
sim_prob2 = np.size(err_ind2)/simlen

#Theory vs simulation
print("The simulated prob for X=1 is",sim_prob2)
print("The theoretical prob for x=1 is",prob2)


# plotting
sim_list= [sim_prob1,sim_prob2,0,0]
theory_list=[prob1,prob2,0,0]
X = np.arange(4)
fig = plt.figure()
ax = fig.add_axes([0,0,1,1])
plt.xlabel('Random variable, X')
plt.ylabel('Probability, $P_{r}(X)$')
ax.bar(X + 0.125, sim_list, color = 'b', width = 0.25)
ax.bar(X - 0.125, theory_list, color = 'r', width = 0.25)
ax.legend(labels=['Simulation', 'Analysis'])
plt.grid()