# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1It8nMnr1gVRoVhOxveExQ8-HYHcErXpd
"""

import numpy as np
import matplotlib.pyplot as plt
# no of simulations
simlen = int(1e5)
# Number of favourable outcomes
count =0 
# looping simlen times 

for item in range(simlen):    
    # Generating outcomes for throw of pair of dice 
    y = np.random.randint(1,7, size=(2, 1))   
    # Finding favourable outcomes
    if y[0][0]==y[1][0] or (y[0][0]==4 and y[1][0]==1) or (y[0][0]==1 and y[1][0]==4)  :
      count+=1

# Calculating simulated probability for X=1
sim_prob2 = count/simlen

# Calculating simulated probability for X=1
sim_prob1 = 1 - sim_prob2
# Theoretical Probability of rv X =0
prob1=  7/9
# Theoretical Probability of rv X =1
prob2=  1 -prob1

#Theory vs simulation
print("The simulated prob for X=1 is",sim_prob2)
print("The theoretical prob for x=1 is",prob2)

# plotting
sim_list= [sim_prob1,sim_prob2,0,0]
theory_list=[prob1,prob2,0,0]
X = np.arange(4)
fig = plt.figure()
ax = fig.add_axes([0,0,1,1])
plt.xlabel('Random variable, X')
plt.ylabel('Probability, $P_{r}(X)$')
ax.bar(X + 0.125, sim_list, color = 'b', width = 0.25)
ax.bar(X - 0.125, theory_list, color = 'r', width = 0.25)
ax.legend(labels=['Simulation', 'Analysis'])
plt.grid()